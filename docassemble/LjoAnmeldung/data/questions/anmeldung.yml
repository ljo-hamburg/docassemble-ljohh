---
features:
  navigation: true
  hide navbar: false
  hide standard menu: true
  labels above fields: true
---
objects:
  person: Individual
  parent: Individual
  conditions: DAFile
  bylaws: DAFile
---
sections:
  - Persönliche Daten
  - Teilnehmerbeitrag
  - Termine
  - Zukünftige Arbeitsphasen
  - Vorbereitung
  - Probenwochenende in Rendsburg
  - Jugend- und Datenschutz
  - Deine Anmeldung
---
include:
  - data.yml
  - util.yml
  - questions.yml
---
# need: confirmation
attachment:
  name: Anmeldung ${ person.name }
  filename: Anmeldung ${ person.name }
  docx template file: Anmeldungsformular_Fruhjahr_2020.docx
  variable name: registration
  valid formats:
    - pdf
---
sets: conditions.filename
code: |
  log("Initializing COndiions")
  conditions.initialize(filename="Teilnahmebedingungen.pdf")
  conditions.from_url("https://ljo-hamburg.de/Teilnahmebedingungen")
  conditions.commit()
---
sets: bylaws.filename
code: |
  bylaws.initialize(filename="Geschaeftsordnung.pdf")
  bylaws.from_url("https://ljo-hamburg.de/Geschaeftsordnung")
  bylaws.commit()
---
template: confirmation_email
subject: Deine Anmeldung zur ${ term['name'] } des LJO Hamburg
content file: confirmation_email.md
---
template: notification_email
subject: ${ person } hat sich zur ${ term['name'] } angemeldet
content file: notification_email.md
---
imports:
  - requests
  - base64
  - json
---
event: send_confirmation_email
need:
  - bylaws.filename
  - conditions.filename
code: |
  send_email(to=[person], template=confirmation_email, attachments=[registration, bylaws, conditions])
  background_response()
---
event: send_notification_email
code: |
  if automation['notification recipients']:
    send_email(to=automation['notification recipients'], template=notification_email, attachments=[registration])
  background_response()
---
event: save_data
code: |
  data = {
    'state': state,
    'firstName': person.name.first,
    'lastName': person.name.last,
    'mail': person.email,
    'phone': person.phone_number,
    'address': person.address,
    'birthday': format_date(person.birthdate, 'yyyy-MM-dd'),
    'instrument': person.instrument,
    'rehearsals': list(rehearsal_dates.true_values()),
    'concerts': list(concert_dates.true_values()),
    'tour': list(tour_dates.true_values()),
    'nextTerm': yesnomaybe(next_term),
    'nextNextTerm': yesnomaybe(nextnext_term),
    'rendsburgNotes': list(rendsburg_notes.true_values()),
    'rendsburgExtendedNotes': rendsburg_extended_notes,
  }
  if person.age_in_years() < 18:
    data['parentFirstName'] = parent.name.first
    data['parentLastName'] = parent.name.last
    data['parentMail'] = parent.email
    data['parentPhone'] = parent.phone_number
  requests.post('https://script.google.com/macros/s/AKfycbyWbQUObPHQGcv8-f1x6ynVX2kZHL4Y2hheOMXpgbAmVUxNCOk/exec', data={
    'spreadsheetID': automation['spreadsheet id'],
    'key': 'cHwzP9DaMbT8DWJIeuTulrPTwqGr7TWm',
    'data': json.dumps(data)
  }).raise_for_status()
  background_response()
---
event: archive_registration
code: |
  requests.post('https://script.google.com/macros/s/AKfycbzTVMyYn6q0OydgArzMbTBlw197-6B7uunHzPJp6Pn8d92wQQI/exec', data={
    'folderID': automation['archive folder'],
    'filename': registration.pdf.filename,
    'key': '8aPDVTmpRdzqxwP700QAgTqk9tUtAomm',
    'data': base64.b64encode(registration.pdf.slurp(auto_decode=False))
  }).raise_for_status()
  background_response()
---
event: save_user_address
code: |
  requests.post('https://script.google.com/macros/s/AKfycbw7xJlo62WldzOT9pbIUO-59EEfw70U7WUcPBO5KwFuMOUnTwc/exec', data={
    'user': person.email,
    'group': automation['mailing list'],
    'key': 'yARJdazgU77oJRySiBGcQy39mNpreO4k'
  }).raise_for_status()
  background_response()
---
event: save_parent_address
code: |
  if person.age_in_years() < 18:
    requests.post('https://script.google.com/macros/s/AKfycbw7xJlo62WldzOT9pbIUO-59EEfw70U7WUcPBO5KwFuMOUnTwc/exec', data={
      'user': parent.email,
      'group': automation['parent mailing list'],
      'key': 'yARJdazgU77oJRySiBGcQy39mNpreO4k'
    }).raise_for_status()
  background_response()
---
event: save_contact
code: |
  contact_data = {
    'firstName': person.name.first,
    'lastName': person.name.last,
    'mail': person.email,
    'phone': person.phone_number,
    'address': person.address,
    'birthday': format_date(person.birthdate, 'yyyy-MM-dd'),
    'instrument': person.instrument,
    'group': automation['contact group'],
    'key': 'UUYxwdbAM6wqZ3NagCCbDpiGRXMtFuRU'
  }
  if person.age_in_years() < 18:
    contact_data['parentFirstName'] = parent.name.first
    contact_data['parentLastName'] = parent.name.last
    contact_data['parentMail'] = parent.email
    contact_data['parentPhone'] = parent.phone_number
  requests.post('https://script.google.com/macros/s/AKfycbythVM4a1_dfHc6-JnY-YsauhfUwfD-JcK4-qHkAMDB96zrSEo/exec',
                data=contact_data).raise_for_status()
  background_response()
---
need:
  - confirmation
  - terms_conditions
  - registration.pdf
code: |
  confirmation_email_task = background_action('send_confirmation_email')
  notification_email_task = background_action('send_notification_email')
  save_data_task = background_action('save_data')
  archive_registration_task = background_action('archive_registration')
  save_user_address_task = background_action('save_user_address')
  save_parent_address_task = background_action('save_parent_address')
  save_contact_task = background_action('save_contact')
---
mandatory: true
code: |
  if confirmation_email_task.ready() \
      and notification_email_task.ready() \
      and save_data_task.ready() \
      and archive_registration_task.ready() \
      and save_user_address_task.ready() \
      and save_parent_address_task.ready() \
      and save_contact_task.ready():
    final_screen
  else:
    waiting_screen
---
id: Wartebildschirm Sommer 2020
event: waiting_screen
section: Deine Anmeldung
prevent going back: True
question: Anmeldung abschicken...
subquestion: |
  Deine Anmeldung wird gerade abgeschickt. Dies kann einen Moment dauern. Bitte
  lass dieses Fenster geöffnet, bis die Anmeldung erfolgreich abgeschickt wurde.
reload: true
---
id: Abgabebestätigung Sommer 2020
event: final_screen
section: Deine Anmeldung
prevent going back: True
question: Deine Anmeldung
subquestion: |
  Deine Anmeldung wurde erfolgreich abgeschickt. Du hast eine Kopie per E-Mail
  bekommen. Du kannst deine Anmeldung auch direkt hier
  [herunterladen](${ registration.pdf.url_for() }). Wir freuen uns darauf, mit
  dir zusammenzuspielen.
  
  Klicke auf "Fertig", um die Anmeldung zu beenden.
buttons:
  - Fertig: exit
---