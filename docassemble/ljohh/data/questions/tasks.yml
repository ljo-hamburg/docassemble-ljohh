---
event: set_variable
code: |
  define(action_argument('name'), action_argument('value'))
  background_response()
---
code: |
  member_data = {
    "Status": status,
    "Vorname": mitglied.name.first,
    "Nachname": mitglied.name.last,
    "Instrument": mitglied.instrument,
    "E-Mail": mitglied.email,
    "Telefonnummer": mitglied.phone_number,
    "Adresse": mitglied.address,
    "Geburtsdatum": format_date(mitglied.birthdate, 'yyyy-MM-dd'),
    "Probentermine": list(probentermine.true_values()),
    "Konzerttermine": list(konzerttermine.true_values()),
    "Anmerkungen": anmerkungen,
    "Nächste Phase": ja_nein_vielleicht(nachste_phase),
    "Übernächste Phase": ja_nein_vielleicht(ubernachste_phase),
    "Versorgung (PWE)": list(pwe_versorgung.true_values()),
    "Sonstiges (PWE)": pwe_sonstiges
  }
  if minderjaehrig:
    data["Eltern Vorname"] = eltern.name.first
    data["Eltern Nachname"] = eltern.name.last
    data["Eltern E-Mail"] = eltern.email
    data["Eltern Telefon"] = eltern.phone_number
---
code: save_data_task = background_action('save_data', 'refresh')
---
event: save_data
code: |
  background = interface() in {"worker", "cron"}
  if testmodus and background:
    background_response_action(
      'set_variable',
      name='test_anmeldungen_tabelle',
      value=get_file_meta(daten["Anmeldungen"]["Tabelle"])
    )
  else:
    result = add_spreadsheet_row(
      daten["Anmeldungen"]["Tabelle"],
      daten["Anmeldungen"]["Bereich"],
      member_data
    )
    if background:
      background_response(result)
    else:
      json_response(result)
---

---
code: add_member_task = background_action('add_member', 'refresh')
---
event: add_member
code: |
  background = interface() in {"worker", "cron"}
  if testmodus and background:
    background_response_action(
      'set_variable',
      name='test_mitglieder_tabelle',
      value=get_file_meta(daten["Mitgliederliste"]["Tabelle"])
    )
  else:
    result = add_spreadsheet_row(
      daten["Mitgliederliste"]["Tabelle"],
      daten["Mitgliederliste"]["Bereich"],
      member_data
    )
    if background:
      background_response(result)
    else:
      json_response(result)
---

---
code: register_member_email_task = background_action('register_member_email', 'refresh')
---
event: register_member_email
code: |
  background = interface() in {"worker", "cron"}
  if testmodus and background:
    background_response_action(
      'set_variable',
      name='test_mitglied_mailingliste',
      value=get_group_meta(daten["Mailingliste"])
    )
  else:
    result = add_group_member(daten["Mailingliste"], mitglied.email)
    if background:
      background_response(result)
    else:
      json_response(result)
---

---
code: register_parent_email_task = background_action('register_parent_email', 'refresh')
---
event: register_parent_email
code: |
  background = interface() in {"worker", "cron"}
  if testmodus and background:
    background_response_action(
      'set_variable',
      name='test_eltern_mailingliste',
      value=get_group_meta(daten["Mailingliste (Eltern)"])
    )
  else:
    result = (add_group_member(daten["Mailingliste (Eltern)"], eltern.email)
              if minderjaehrig else True)
    if background:
      background_response(result)
    else:
      json_response(result)
---

---
code: anmeldung_task = background_action('assemble_anmeldung', 'refresh')
---
event: assemble_anmeldung
code: |
  background_response_action(
    'set_variable',
    name='anmeldung',
    value=anmeldeformular
  )
---

---
need: anmeldung
code: archive_registration_task = background_action('archive_registration', 'refresh')
---
event: archive_registration
need: anmeldung
code: |
  background = interface() in {"worker", "cron"}
  if testmodus and background:
    background_response_action(
      'set_variable',
      name='test_archiv_ordner',
      value=get_file_meta(daten["Archivordner-ID"])
    )
  else:
    result = upload_file(anmeldung.pdf, daten["Archivordner-ID"])
    if background:
      background_response(result)
    else:
      json_response(result)
---

---
need: anmeldung
code: member_email_task = background_action('send_member_email', 'refresh')
---
event: send_member_email
need: anmeldung
code: |
  background = interface() in {"worker", "cron"}
  if testmodus and background:
    result = True
  else:
    result = send_ljo_email(
        to=[mitglied],
        template=mitglied_email,
        attachments=[anmeldung.pdf, teilnahmebedingungen, geschaeftsordnung]
    )
  if background:
    background_response(result)
  else:
    json_response(result)
---

---
need: anmeldung
code: orga_email_task = background_action('send_orga_email', 'refresh')
---
event: send_orga_email
need: anmeldung
code: |
  background = interface() in {"worker", "cron"}
  recipients = daten["E-Mail Benachrichtigung"]
  if isinstance(recipients, str):
    recipients = [recipients]
  if not recipients or (testmodus and background):
    result = True
  else:
    result = send_ljo_email(
      to=recipients,
      template=orga_email,
      attachments=[anmeldung.pdf]
    )
  if background:
    background_response(result)
  else:
    json_response(result)
---
