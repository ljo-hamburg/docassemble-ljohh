---
features:
  navigation: true
  hide navbar: false
  hide standard menu: true
  labels above fields: true
---
objects:
  mitglied: Individual
  eltern: Individual
  bedingungen: DAObject
---
include:
  - tasks.yml
---
modules:
  - .util
  - .ljo
---
code: |
  minderjaehrig = mitglied.age_in_years() < 18
  if minderjaehrig:
    need(Elternkontakt)
---
code: |
  bedingungen.akzeptiert = all([
    bedingungen.tnbedingungen,
    bedingungen.aufnahmen,
    bedingungen.finanzierung,
    bedingungen.newsletter
  ])
  if minderjaehrig:
    bedingungen.akzeptiert = (
      bedingungen.akzeptiert and bedingungen.veranstaltungsort
    )
---
code: |
  teilnahmebedingungen = DAFile('teilnahmebedingungen')
  teilnahmebedingungen.initialize(filename="Teilnahmebedingungen.pdf")
  teilnahmebedingungen.from_url("https://ljo-hamburg.de/Teilnahmebedingungen")
  teilnahmebedingungen.commit()
---
code: |
  geschaeftsordnung = DAFile('geschaeftsordnung')
  geschaeftsordnung.initialize(filename="Geschaeftsordnung.pdf")
  geschaeftsordnung.from_url("https://ljo-hamburg.de/Geschaeftsordnung")
  geschaeftsordnung.commit()
---
code: |
  status = url_args.get("status", "normal").lower()
  if status not in ["normal", "flex", "aushilfe"]:
    status = "normal"
---
code: |
  if daten["Testmodus"]:
    Testmodus
  elif not all(task.ready() for task in [
      save_data_task,
      add_member_task,
      register_member_email_task,
      register_parent_email_task,
      member_email_task,
      orga_email_task,
      archive_registration_task
  ]):
    Warten
  Abschicken = True
---
sets: anmeldung
need: anmeldung_task
code: Warten
---
code: anmeldung_task = background_action('assemble_anmeldung', 'refresh')
---
event: assemble_anmeldung
code: background_response_action('set_anmeldung', anmeldung=anmeldeformular)
---
event: set_anmeldung
code: |
  anmeldung = action_argument('anmeldung')
  background_response()
---
def: testmode_defs
mako: |
  <%def name="check_table(table)">
    % if table["code"] == 404:
      <span style="color:red">
      Diese Tabelle wurde nicht gefunden. Prüfe, ob die ID richtig ist und ob der
      Account ${ daten["Account"] } Zugriff auf die Datei hat.
      </span>
    % elif table["code"] == 403:
      <span style="color:red">
      Der Account ${ daten["Account"] } hat keinen Zugriff auf die Tabelle.
      </span>
    % elif table["code"] == 200:
      - ⇒ **${ table["name"] }**

    % if not table["sheet"]:
      <span style="color:red">
      Die Datei ist keine Google Tabelle.
      </span>
    % elif not table["editable"]:
      <span style="color:red">
      Der Account ${ daten["Account"] } kann keine Daten in die Tabelle
      schreiben.
      </span>
    % endif
    % else:
    <span style="color:red">
    Ein unbekannter Fehler ist aufgetreten.
    </span>
    % endif
  </%def>
  <%def name="check_group(group)">
    % if group["code"] == 404:
      <span style="color:red">
      Die Gruppe exitiert nicht.
      </span>
    % elif group["code"] == 200:
      - ⇒ **${ group["name"] }**
    % else:
      <span style="color:red">
      Ein unbekannter Fehler ist aufgetreten.
      </span>
    % endif
  </%def>
  <%def name="check_folder(folder)">
    % if folder["code"] == 404:
      <span style="color:red">
      Der Ordner wurde nicht gefunden. Prüfe, ob die ID richtig ist und ob der
      Account ${ daten["Account"] } Zugriff auf den Ordner hat.
      </span>
    % elif folder["code"] == 403:
      <span style="color:red">
      Der Account ${ daten["Account"] } hat keinen Zugriff auf den Ordner.
      </span>
    % elif folder["code"] == 200:
      - ⇒ **${ folder["name"] }**

    % if not folder["folder"]:
      <span style="color:red">
      Die ID ist kein Ordner.
      </span>
    % elif not folder["editable"]:
      <span style="color:red">
      Der Account ${ daten["Account"] } kann keine Daten in den Ordner
      schreiben.
      </span>
    % endif
    % else:
    <span style="color:red">
    Ein unbekannter Fehler ist aufgetreten.
    </span>
    % endif
  </%def>
---
id: testmodus
field: Testmodus
section: Deine Anmeldung
question: Testmodus
usedefs: [testmode_defs]
subquestion: |
  Die Anmeldung befindet sich im Testmodus. Daher werden keine E-Mails
  verschickt und auch keine weiteren Automatisierungen vorgenommen. Außerhalb
  des Testmodus würde nun folgendes passieren:

  <%
    anmeldung_meta = get_file_meta(daten["Anmeldungen"]["Tabelle"])
    mitglieder_meta = get_file_meta(daten["Mitgliederliste"]["Tabelle"])
    folder_meta = get_file_meta(daten["Archivordner-ID"])
    member_list = get_group_meta(daten["Mailingliste"])
  %>

  1. Ein Wartebildschirm wird angezeigt.
  2. Die eingegebenen Daten werden in der Tabelle mit der ID
     `${ anmeldung_meta["id"] }` eingetragen.

     ${ check_table(anmeldung_meta) }
  3. Die eingegebenen Daten werden in der Mitgliedertabelle mit der ID
     `${ mitglieder_meta["id"] }` eingetragen.

     ${ check_table(mitglieder_meta) }
  4. Die E-Mail-Adresse ${ mitglied.email } wird dem Verteiler
     ${ member_list["email"] } hinzugefügt.

     ${ check_group(member_list) }
  % if minderjaehrig:
    <% parent_list = get_group_meta(daten["Mailingliste (Eltern)"]) %>
    5. Die E-Mail-Adresse ${ eltern.email } wird dem Verteiler
       ${ parent_list["email"] } hinzugefügt.

       ${ check_group(parent_list) }
  % endif
  6. Das Anmeldeformular wird im Ordner mit der ID `${ folder_meta["id"] }`
     gespeichert.

     ${ check_folder(folder_meta) }
  7. Eine E-Mail wird an ${ mitglied.email } gesendet. Die E-Mail ist unten zu
     sehen. Angehängt an die E-Mail sind das Anmeldeformular, die
     Teilnahmebedingungen und die Geschäftsordnung.
  % if daten["E-Mail Benachrichtigung"]:
  8. Die folgenden Empfänger werden per E-Mail über die Anmeldung benachrichtigt
     und erhalten die Anmeldung im Anhang:

     % for email in daten["E-Mail Benachrichtigung"]:
      - ${ email }
     % endfor
  % endif

  % if daten["E-Mail Benachrichtigung"]:
  ### E-Mail: *${ orga_email.subject }*
  Diese E-Mail wird als Benachrichtigung versendet, wenn eine Anmeldung
  abgeschickt wird.

  ${ orga_email.content }
  % endif

  ### E-Mail: *${ mitglied_email.subject }*
  Diese E-Mail wird an ${ mitglied.name } gesendet. Der Inhalt der E-Mail
  ist in diesem PDF zu sehen, das Design sieht aber anders aus. Angehängt an
  diese Mail sind die folgenden Dokumenten:

  - [${ anmeldeformular.pdf.filename }](${ anmeldeformular.pdf.url_for() })
  - [${ teilnahmebedingungen.filename }](${ teilnahmebedingungen.url_for() })
  - [${ geschaeftsordnung.filename }](${ geschaeftsordnung.url_for() })

  ${ mitglied_email.content }
buttons:
  Weiter: continue
  Wartebildschirm ansehen:
    code: Warten
